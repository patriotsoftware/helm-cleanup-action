name: 'Helm Cleanup'
author: DevOps
description: Run repository helm cleanup

inputs:
  namespace:
    description: 'Helm Namespace'
    required: true   
  github-repo:
    description: 'GitHub repo'
    required: false
    default: ''
  github-run-id:
    description: 'GitHub run id'
    required: false
    default: ''
  slack-token:
    description: 'Slack token'
    required: false
    default: ''
  destination:
    description: 'Destination for messaging. Comma separated list. Valid Options: committer, #channel-name, email@email.com. Default is #alerts-devops'
    required: false
    default: '#alerts-devops'
    
runs:
  using: 'composite'
  steps:
    - name: Authenticate with DEV
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-1
          
    - name: Clean Up Helm
      id: helm-uninstall
      run: |
        namespace="${{ inputs.namespace }}"
        echo "$namespace"
        kubectl get pods -n $namespace -o custom-columns=HELM:.status.containerStatuses[*].name,BRANCH:.metadata.labels.patriotsoftware/branch,STATUS:.status.containerStatuses[*].state.waiting.reason --no-headers | grep -v -e '<none>'
        kubectl get pods -n $namespace -o custom-columns=HELM:.status.containerStatuses[*].name,BRANCH:.metadata.labels.patriotsoftware/branch,STATUS:.status.containerStatuses[*].state.waiting.reason --no-headers 
        results_array=$(kubectl get pods -n $namespace -o custom-columns=HELM:.status.containerStatuses[*].name,BRANCH:.metadata.labels.patriotsoftware/branch,STATUS:.status.containerStatuses[*].state.waiting.reason --no-headers | grep -v -e '<none>')

        echo "$results"
        for line in "${results_array[@]}"
        do
          echo "$line"
          col=(`echo ${line}`);          
          helm_name="${col[0]}"
          branch_name="${col[1]}"
          reason="${col[2]}"
          echo "BRANCH:$branch_name MSG:$reason"
          
          if [ $branch_name == "main" ]; then
            echo "Main branch is being uninstalled. Alert is triggered."
            echo "main-uninstalled=true" >> $GITHUB_OUTPUT 
          fi
          
          echo "Uninstall HELM: ${helm_name}"
          helm uninstall $helm_name -n $namespace
        done
      shell: bash

    - uses: patriotsoftware/slack-bot-action@v1
      if: ${{ steps.helm-uninstall.outputs.main-uninstalled == 'true' && inputs.slack-token != '' && inputs.github-repo != '' }}
      with:
        destination: ${{ inputs.destination }}
        # Fallback used if can't find email of committer, often due to the private github commit email addresses.
        # TODO: Change to your team's alerts channel here:
        fallback-destination: "#alerts-devops"
        message: |
          *Status: Branch Cleanup Uninstalled Main/Master*
          Repo: ${{ inputs.github-repo }}
          Branch Cleanup uninstalls branches that are not in a 'Running' or 'Terminating' state.
          https://github.com/${{ inputs.github-repo }}/actions/runs/${{ inputs.github-run-id }}
        slack-token: ${{ inputs.slack-token }}
